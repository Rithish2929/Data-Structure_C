Data Structure-IT the way to arrange data in main memory for efficient usage.eg-Array,Linked List,Trees.
Algorithm-It is sequence of steps to solve a problem.Eg-Sorting an array.
Heap-In heap, the program requests dynamic memory from the main memory.This is more advantageous than stack as it deletes the memory immediately after use(Efficeint).
Time Complexity-It is the amount of time an alogorithm takes while varying the input.
Big O-Order of. 

-->Abstract Data Type(ADT)-It is the Minimum required functionalities(MRF) and some operations in a Data Structures.
    Eg-Arrays--MRF-get(i),set(i,num)....[i is the index here]
      --Operations=Insert,Delete,Add,Resize.
    Abstraction-It refers to process of hiding the details of code.
  

-->ADT's AND ARRAYS:-
  *ADT's=set of values + set of operations.
    set of values=total_size,used_size and base address
    set of operations=get(i),set(i,num),add(arr),max(L).

  *stacks and heaps-In NOTES.

  *NOTE-An array cant be extended,it can only be reallocated space in memory to addition of new element.
  
  *Primary Operations in Array:-
    i)Traversal-It is process of visiting every element in the array.
    ii)Insertion:-
      Case 1-Order should be maintained.
          ind 2-->5 in array with [1,2,6,7,4]
          Then it becomes [1,2,5,6,7,4].  NOTE:The array should have extra space.
          Here the elements move by one index.
      Case 2-Order need not be maintained.
          ind 2-->5 in array with [1,2,6,7,4]
          Then it becomes [1,2,5,7,4,6].  NOTE:The array should have extra space.
          The element in the index goes after the last used element in the array.
    iii)Deletion:-
        Case 1-Deletion removes the element to be removed and moves the remaining element forward by one index.
        Case 2-The element to be deleted is removed and the last element is replaced in its place.
    iv)Searching
        Linear Search-It is the process of searching each element of an unsorted array until the element is found.Done through Array Traversal.
        Binary Search-t is the process of searching  element of an sorted array.
-->Linked List :-
  *In Circularly linked list the head does not matter ,as it is only a pointer where the linked list starts.
  *How to Make Empty Linked Lists:-
    i)Singly L.L. 
              p->NULL
    ii)Circular LL
              Circular LL have a head element(Node) that is only used to provide acess to the L.L.
              In an Empty circular LL the head node points to itself. 
              This is only alternate visualization

-->Stack-It is a array with a Top(index).Top has a default value of -1 if it is empty.

  * Parenthesis Matching Problem in C :-
    It possible to tell if expression is unmatched if it is small.But if it is Expresstion with a lots of Characters and Parenthesis then it will 
    be hard to tell wheather it balanced or unbalanced.So we use both Stack and Array to find out wheather a expression is balanced or unbalanced.
    Solving-
    The Expresstion is first put inside a array and Then Traversed.If it is 
      ( --> Push into Stack.
      ) -->Pop in Stack.

    Conditions For Balanced Expresstion :-
    1)While Popping the stack should'nt Underflow ->Then it is unbalanced expression.
    2)At End Of Expression(EOE),the stack should be Empty ->Else it unbalanced Expression.
       